apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-volume
  namespace: redis-server
spec:
  storageClassName: nfs-client
  capacity:
    storage: 10Gi
  persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.155
    path: "/nfs/k3s/redis-server"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-pvc
  namespace: redis-server
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# kind: Pod
# apiVersion: v1
# metadata:
#   name: redis-server
#   namespace: redis-server
# spec:
#   containers:
#   - name: redis-server
#     image: redis
#     args: ["--appendonly", "yes"]
#     ports:
#       - name: redis-server
#         containerPort: 6379
#     volumeMounts:
#       - name: nfs-pvc
#         mountPath: "/data"
#     env:
#     - name: ALLOW_EMPTY_PASSWORD
#       value: "yes"
#   restartPolicy: "Always"
#   volumes:
#     - name: nfs-pvc
#       persistentVolumeClaim:
#         claimName: redis-pvc
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-server
  namespace: redis-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
  template:
    metadata:
      labels:
        app: redis-server
        name: redis-server
    spec:
      nodeSelector:
        node-type: worker
      containers:
      - name: redis-server
        image: redis
        args: ["--appendonly", "yes"]
        ports:
          - name: redis-server
            containerPort: 6379
        volumeMounts:
          - name: nfs-pvc
            mountPath: /data
        env:
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
      volumes:
        - name: nfs-pvc
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-server
  namespace: redis-server
spec:
  selector:
    app: redis-server
  type: LoadBalancer
  ports:
    - name: redis-port
      protocol: TCP
      port: 6379
      targetPort: 6379
  loadBalancerIP: 192.168.1.201